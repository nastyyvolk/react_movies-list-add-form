{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FormInput/FormInput.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","regExp","FormInput","validate","event","addError","props","target","name","value","test","this","onChange","errors","htmlFor","toUpperCase","slice","type","id","ClassNames","onBlur","React","Component","NewMovie","state","changeValue","currentTarget","setState","currentState","clearState","formValidation","key","onSubmit","preventDefault","newMovie","add","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fbf94f3c.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React from 'react';\nimport ClassNames from 'classnames';\n\ninterface Props {\n  name: string;\n  value: string;\n  errors: { [key: string]: boolean };\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  addError: (name: keyof State) => void;\n}\n\nconst regExp = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\nexport class FormInput extends React.Component<Props, {}> {\n  validate = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { addError } = this.props;\n    const { name, value } = event.target;\n\n    if (!value) {\n      addError(name as keyof State);\n    }\n\n    if (name === 'imgUrl' && !regExp.test(value)) {\n      addError(name as keyof State);\n    }\n\n    if (name === 'imdbUrl' && !regExp.test(value)) {\n      addError(name as keyof State);\n    }\n  };\n\n  render() {\n    const {\n      name,\n      onChange,\n      value,\n      errors,\n    } = this.props;\n\n    return (\n      <>\n        <label htmlFor={name} className=\"form-label\">\n          {name[0].toUpperCase() + name.slice(1)}\n          <input\n            type=\"text\"\n            name={name}\n            id={name}\n            className={ClassNames('form-control', {\n              'is-invalid': errors[name],\n            })}\n            value={value}\n            onChange={onChange}\n            onBlur={this.validate}\n          />\n        </label>\n        {(errors[name]) && (\n          <span className=\"error-message\">\n            {'Please enter a valid '}\n            {name}\n          </span>\n        )}\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { FormInput } from '../FormInput';\n\ntype Props = {\n  add: (movie: Movie) => void;\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    errors: {},\n  };\n\n  changeValue = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value, name } = event.currentTarget;\n\n    this.setState({ [name]: value } as Omit<State, 'errors' | 'isFormValid'>);\n    if (value) {\n      this.setState(currentState => {\n        return {\n          errors: {\n            ...currentState.errors,\n            [name]: false,\n          },\n        };\n      });\n    }\n  };\n\n  addError = (name: keyof State) => {\n    this.setState(currentState => {\n      return {\n        // isFormValid: false,\n        errors: {\n          ...currentState.errors,\n          [name]: true,\n        },\n      };\n    });\n  };\n\n  clearState = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  };\n\n  formValidation = () => {\n    // eslint-disable-next-line\n    for (const key in this.state) {\n      if (!this.state[key as keyof State]) {\n        this.addError(key as keyof State);\n\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    const newMovie: Movie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    if (this.formValidation()) {\n      this.props.add(newMovie);\n      this.clearState();\n    }\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.onSubmit} className=\"form-label\">\n        <FormInput\n          name=\"title\"\n          onChange={this.changeValue}\n          addError={this.addError}\n          value={this.state.title}\n          errors={this.state.errors}\n        />\n\n        <FormInput\n          name=\"description\"\n          onChange={this.changeValue}\n          addError={this.addError}\n          value={this.state.description}\n          errors={this.state.errors}\n        />\n\n        <FormInput\n          name=\"imgUrl\"\n          onChange={this.changeValue}\n          addError={this.addError}\n          value={this.state.imgUrl}\n          errors={this.state.errors}\n        />\n\n        <FormInput\n          name=\"imdbUrl\"\n          onChange={this.changeValue}\n          addError={this.addError}\n          value={this.state.imdbUrl}\n          errors={this.state.errors}\n        />\n\n        <FormInput\n          name=\"imdbId\"\n          onChange={this.changeValue}\n          addError={this.addError}\n          value={this.state.imdbId}\n          errors={this.state.errors}\n        />\n\n        <button\n          type=\"submit\"\n          className=\"btn btn-primary\"\n        >\n          Add movie\n        </button>\n\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState(currentState => {\n      return { movies: [...currentState.movies, movie] };\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie add={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}